{"version":3,"file":"static/js/379.fea3015e.chunk.js","mappings":"sOAEaA,EAAYC,EAAAA,EAAAA,GAAH,uJASTC,EAAYD,EAAAA,EAAAA,IAAH,oCAITE,EAAYF,EAAAA,EAAAA,IAAH,wCAITG,EAAWH,EAAAA,EAAAA,IAAH,wC,2DC4BrB,EAvCyB,WACvB,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACJE,GAAQC,EAAAA,EAAAA,MAiBZ,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcL,GAASM,MAAK,SAACC,GAC7BR,EAAYQ,QACX,CAACP,KAQF,iCACE,SAACQ,EAAA,EAAD,CAAQC,QAAS,kBAAIP,GAAO,IAAIQ,QAAQ,YAAYC,GAAI,CAACC,GAAI,QAA7D,mBACA,SAACpB,EAAD,UAAYM,EAASe,kBACrB,UAAClB,EAAD,WACGG,EAASgB,aAAY,SAACpB,EAAD,CAAWqB,IA3BtB,kCA2BwCjB,EAASgB,YAAaE,IAAI,MAAM,SAACtB,EAAD,CAAWqB,IAAI,0CAA0CC,IAAI,MAChJ,4BACE,UAACpB,EAAD,gBAAW,uCAAoBE,EAASmB,aACxC,UAACrB,EAAD,YAAU,2CAAwBE,EAASoB,iBAC3C,UAACtB,EAAD,YAAU,2CAAwBE,EAASqB,uBAG/C,SAAC,KAAD,CAAUC,MAAOC,EAAAA,EAAWC,UAAU,UAAUC,GAAG,OAAnD,mBACA,SAAC,KAAD,CAASH,MAAOC,EAAAA,EAAWE,GAAG,UAA9B,sBACM,SAAC,KAAD,CAAQC,QAAS,CAAC1B,U,uICxCxB2B,EAAU,gCACVC,EAAM,mCAECC,EAAgB,mCAAG,+FACtBC,EAAO,IAAIC,gBAAgB,CAC7BC,QAASJ,EACTK,KAAM,IAHkB,SAKZC,MAAM,GAAD,OAAIP,EAAJ,+BAAkCG,IAL3B,cAKtBK,EALsB,gBAMZA,EAAEC,OANU,cAMtB3B,EANsB,yBAOrBA,GAPqB,2CAAH,qDAUhB4B,EAAc,mCAAG,WAAOC,GAAP,kFACpBR,EAAO,IAAIC,gBAAgB,CAC7BC,QAASJ,EACTK,KAAM,EACNM,MAAOD,EACPE,eAAe,IALO,SAOVN,MAAM,GAAD,OAAIP,EAAJ,wBAA2BG,IAPtB,cAOpBK,EAPoB,gBAQVA,EAAEC,OARQ,cAQpB3B,EARoB,yBASnBA,GATmB,2CAAH,sDAYdF,EAAa,mCAAG,WAAOkC,GAAP,kFACnBX,EAAO,IAAIC,gBAAgB,CAC7BC,QAASJ,IAFY,SAITM,MAAM,GAAD,OAAIP,EAAJ,iBAAoBc,EAApB,YAA0BX,EAA1B,wCAJI,cAInBK,EAJmB,gBAKTA,EAAEC,OALO,cAKnB3B,EALmB,yBAMlBA,GANkB,2CAAH","sources":["components/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","utilits/fetchAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const TitleFilm = styled.h1`\ncolor: #2e2e33;\ndisplay: flex;\njustify-content: center;\nmargin-bottom: 20px;\nbackground-color: #1717ad21;\npadding: 10px;\n`\n\nexport const BigPoster = styled.img`\nmargin: 0;\n`\n\nexport const BoxPoster = styled.div`\ndisplay: flex;\n`\n\nexport const Overview = styled.div`\npadding: 15px;\n`\n","import { useState, useEffect } from 'react'\nimport { TitleFilm, BigPoster, BoxPoster, Overview } from './MovieDetailsPage.styled'\nimport { useParams, useNavigate, NavLink, Outlet } from 'react-router-dom' //useLocation,\nimport { Button } from '@mui/material';\nimport { findFilmsInfo } from 'utilits/fetchAPI';\nimport { linkActiv } from 'utilits/linkActive';\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetailsPage = () => {\n  const [filmInfo, setFilmInfo] = useState({})\n  const { movieId } = useParams()\n  let navig = useNavigate()\n  // let location = useLocation()\n\n  // console.log(location);\n   // почему то тут прилитает nall в стейте\n  //location?.pathname?.from ?? '/'\n\n  useEffect(() => {\n    findFilmsInfo(movieId).then((r)=>{\n    setFilmInfo(r)})\n  }, [movieId])\n\n  //   useEffect(() => {\n  // console.log(filmInfo.reviews);\n  // }, [filmInfo])\n\n  \n  return (\n    <>\n      <Button onClick={()=>navig(-1)} variant='contained' sx={{mb: '10px'}}>Back</Button>\n      <TitleFilm>{filmInfo.original_title}</TitleFilm>\n      <BoxPoster>\n        {filmInfo.poster_path?<BigPoster src={imgBaseUrl + filmInfo.poster_path} alt=\"\" />:<BigPoster src='../../img/mf-no-poster-available-v2.png' alt=\"\" />}\n        <div>\n          <Overview> <h3>Overview: </h3>{filmInfo.overview}</Overview>\n          <Overview><h3>Release date: </h3>{filmInfo.release_date}</Overview>\n          <Overview><h3>Vote average: </h3>{filmInfo.vote_average}</Overview>\n        </div>\n      </BoxPoster>\n      <NavLink  style={linkActiv} className='linkBar' to='cast'>cast</NavLink>\n      <NavLink style={linkActiv} to='reviews'>reviews</NavLink>\n            <Outlet context={[filmInfo]}/>\n      </>\n  )\n}\n\nexport default MovieDetailsPage","// https://api.themoviedb.org/3/movie/550?api_key=c4ff5df06d9c3bc212d0ff99e5222626\n\nconst baseUrl = \"https://api.themoviedb.org/3/\"\nconst KEY = 'c4ff5df06d9c3bc212d0ff99e5222626'\n\nexport const findPopularFilms = async () => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n    });\n    const f = await fetch(`${baseUrl}trending/movie/week?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsTitle = async (searchWord) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n        query: searchWord,\n        include_adult: false,\n    });\n    const f = await fetch(`${baseUrl}search/movie?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsInfo = async (id) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n    });\n    const f = await fetch(`${baseUrl}movie/${id}?${meta}&append_to_response=credits,reviews`)\n    const r = await f.json()\n    return r\n}"],"names":["TitleFilm","styled","BigPoster","BoxPoster","Overview","useState","filmInfo","setFilmInfo","movieId","useParams","navig","useNavigate","useEffect","findFilmsInfo","then","r","Button","onClick","variant","sx","mb","original_title","poster_path","src","alt","overview","release_date","vote_average","style","linkActiv","className","to","context","baseUrl","KEY","findPopularFilms","meta","URLSearchParams","api_key","page","fetch","f","json","findFilmsTitle","searchWord","query","include_adult","id"],"sourceRoot":""}