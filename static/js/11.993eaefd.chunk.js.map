{"version":3,"file":"static/js/11.993eaefd.chunk.js","mappings":"mMAEaA,EAASC,EAAAA,EAAAA,IAAH,yDAKNC,EAAYD,EAAAA,EAAAA,GAAH,uFAOTE,EAAWF,EAAAA,EAAAA,GAAH,oU,SCKrB,EAdiB,SAAC,GAA4B,IAA1BG,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvB,OACE,UAACF,EAAD,WACKE,GAAc,SAACL,EAAD,CAAQM,IAAG,UANjB,mCAMiB,OAAkBD,MAAkB,SAACL,EAAD,CAAQM,IAAI,8EAC5E,SAACJ,EAAD,UAAYE,S,kICPPG,E,QAAYN,EAAAA,GAAH,8G,mBCiCtB,EA3BiB,SAAAO,GACf,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAACC,GACvBJ,EAAWI,EAAEC,cAEd,KAGD,iCACE,SAACT,EAAD,oCAEGG,EAAQO,OAAS,IAAK,SAAC,KAAD,UACtBP,EAAQQ,KAAI,SAAAC,GACX,OAED,SAAC,KAAD,CAAoBC,GAAI,UAAYD,EAAKE,GAAzC,UACK,SAACC,EAAA,EAAD,CAAUjB,YAAac,EAAKd,YAAaD,MAAOe,EAAKf,SAD/Ce,EAAKE,c,4JCvBZE,EAAYtB,EAAAA,EAAAA,KAAH,yFAMTuB,EAAcvB,EAAAA,EAAAA,OAAH,mJAWXwB,EAAYxB,EAAAA,EAAAA,MAAH,2MAUTyB,EAAWzB,EAAAA,EAAAA,GAAH,0T,uIC3Bf0B,EAAU,gCACVC,EAAM,mCAECf,EAAgB,mCAAG,+FACtBgB,EAAO,IAAIC,gBAAgB,CAC7BC,QAASH,EACTI,KAAM,IAHkB,SAKZC,MAAM,GAAD,OAAIN,EAAJ,+BAAkCE,IAL3B,cAKtBK,EALsB,gBAMZA,EAAEC,OANU,cAMtBpB,EANsB,yBAOrBA,GAPqB,2CAAH,qDAUhBqB,EAAc,mCAAG,WAAOC,GAAP,kFACpBR,EAAO,IAAIC,gBAAgB,CAC7BC,QAASH,EACTI,KAAM,EACNM,MAAOD,EACPE,eAAe,IALO,SAOVN,MAAM,GAAD,OAAIN,EAAJ,wBAA2BE,IAPtB,cAOpBK,EAPoB,gBAQVA,EAAEC,OARQ,cAQpBpB,EARoB,yBASnBA,GATmB,2CAAH,sDAYdyB,EAAa,mCAAG,WAAOnB,GAAP,kFACnBQ,EAAO,IAAIC,gBAAgB,CAC7BC,QAASH,IAFY,SAITK,MAAM,GAAD,OAAIN,EAAJ,iBAAoBN,EAApB,YAA0BQ,EAA1B,wCAJI,cAInBK,EAJmB,gBAKTA,EAAEC,OALO,cAKnBpB,EALmB,yBAMlBA,GANkB,2CAAH","sources":["components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.jsx","components/HomePage/HomePage.styled.jsx","components/HomePage/HomePage.jsx","components/MoviesPage/MoviesPage.styled.jsx","utilits/fetchAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Poster = styled.img` \n  height: 85%;\n  width: 100%;\n`\n\nexport const FilmTitle = styled.h2` \ncolor: #333;\nheight: 30px;\nfont-size:20px;\npadding: 10px;\n`\n\nexport const CardFilm = styled.li` \n display: flex;\n flex-direction: column;\n  height: 100%;\nwidth: 100%;\nborder-radius: 5px;\noverflow: hidden;\nbackground-color:#bdb9a6;\n  box-shadow: -2px -2px 7px rgb(109, 109, 109);\ntransition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);\n:hover {\n    transform: scale(1.03);\n  }\n`","import { Poster, FilmTitle, CardFilm } from './FilmCard.styled'\nimport PropTypes from 'prop-types'\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\n\nconst FilmCard = ({ title, poster_path }) => {\n    return (\n      <CardFilm>\n          {poster_path ? <Poster src={`${imgBaseUrl}${poster_path}`} />:<Poster src='https://www.jakartaplayers.org/uploads/1/2/5/5/12551960/2297419_orig.jpg' /> }\n        <FilmTitle>{title}</FilmTitle>\n      </CardFilm>\n  )\n}\n\nFilmCard.propTypes = {\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n}\n\nexport default FilmCard","import styled from \"@emotion/styled\";\n\nexport const InfoPages = styled.h1`\nmargin: 0 auto 10px auto;\ndisplay: flex;\njustify-content: center;\ncolor: #212121;\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from \"react\";\nimport { findPopularFilms } from 'utilits/fetchAPI';\nimport { BoxFilms } from 'components/MoviesPage/MoviesPage.styled';\nimport { InfoPages } from './HomePage.styled';\nimport FilmCard from 'components/FilmCard/FilmCard';\n\nconst HomePage = props => {\n  const [popular, setPopular] = useState([])\n\n  useEffect(() => {\n    findPopularFilms().then((r)=>{\n      setPopular(r.results)\n    })\n  }, [])\n\n  return (\n    <>\n      <InfoPages>Popular films of week</InfoPages>\n\n        {popular.length > 0 && <BoxFilms>\n        {popular.map(film => {\n          return (\n            \n         <Link key={film.id} to={'movies/' + film.id}>\n              <FilmCard poster_path={film.poster_path} title={film.title} />\n            </Link>\n            );\n          })}\n        </BoxFilms>}\n    </>\n  )\n}\n\nexport default HomePage","import styled from \"@emotion/styled\";\n\nexport const SerchForm = styled.form` \ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nexport const SerchButton = styled.button`\nbackground-color: transparent;\nwidth: 20px;\nheight: 20px;\nborder: none;\nopacity: 0.7;\n:hover {\n    opacity: 1;\n  }\n`\n\nexport const InputWord = styled.input`\nheight: 30px;\ndisplay: flex;\nmargin-left: 10px;\npadding: 2px 10px;\nborder-radius: 7px;\nbox-shadow: 1px 1px 10px rgb(220, 187, 228);\ncolor: rgb(123, 59, 207);\nfont: inherit;`\n\nexport const BoxFilms = styled.ul` \n display: grid;\n/* max-width: calc(100vw - 48px); */\ngrid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\ngrid-gap: 16px;\nmargin-top: 30px;\nmargin-bottom: 20px;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;\nmin-height: 100%;\nmax-width: 1400px;\n`\n\n\n","// https://api.themoviedb.org/3/movie/550?api_key=c4ff5df06d9c3bc212d0ff99e5222626\n\nconst baseUrl = \"https://api.themoviedb.org/3/\"\nconst KEY = 'c4ff5df06d9c3bc212d0ff99e5222626'\n\nexport const findPopularFilms = async () => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n    });\n    const f = await fetch(`${baseUrl}trending/movie/week?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsTitle = async (searchWord) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n        query: searchWord,\n        include_adult: false,\n    });\n    const f = await fetch(`${baseUrl}search/movie?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsInfo = async (id) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n    });\n    const f = await fetch(`${baseUrl}movie/${id}?${meta}&append_to_response=credits,reviews`)\n    const r = await f.json()\n    return r\n}"],"names":["Poster","styled","FilmTitle","CardFilm","title","poster_path","src","InfoPages","props","useState","popular","setPopular","useEffect","findPopularFilms","then","r","results","length","map","film","to","id","FilmCard","SerchForm","SerchButton","InputWord","BoxFilms","baseUrl","KEY","meta","URLSearchParams","api_key","page","fetch","f","json","findFilmsTitle","searchWord","query","include_adult","findFilmsInfo"],"sourceRoot":""}