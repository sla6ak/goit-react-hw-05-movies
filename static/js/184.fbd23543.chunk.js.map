{"version":3,"file":"static/js/184.fbd23543.chunk.js","mappings":"oMAEaA,EAASC,EAAAA,EAAAA,IAAH,yDAKNC,EAAYD,EAAAA,EAAAA,GAAH,uFAOTE,EAAWF,EAAAA,EAAAA,GAAH,oU,SCKrB,EAdiB,SAAC,GAA4B,IAA1BG,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvB,OACE,UAACF,EAAD,YACK,SAACH,EAAD,CAAQM,IAAG,UANH,mCAMG,OAAkBD,MAChC,SAACH,EAAD,UAAYE,S,8GCmDpB,UApDmB,WACjB,OAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAqBA,OALAC,EAAAA,EAAAA,YAAU,WACJF,EAAWG,SAEd,CAACH,KAGF,iCACE,UAAC,KAAD,CAAWI,SAjBI,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAST,EAAWU,cAAcC,OACzB,KAAXF,IACJG,EAAAA,EAAAA,IAAeH,GAAQI,MAAK,SAACC,GAC3BX,EAAcW,EAAEC,aAYhB,WACE,SAAC,IAAD,CAAaC,KAAK,SAAlB,UACE,SAAC,MAAD,CAAiBC,MAAO,CAACC,MAAO,qBAAsBC,MAAO,OAAQC,OAAQ,aAE/E,SAAC,KAAD,CACEJ,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,QA9BY,SAAAC,GAClBxB,EAAcwB,EAAEC,cAAcC,MAAMhB,SA8B9BgB,MAAO3B,OAIVE,EAAWG,OAAS,IAAK,SAAC,KAAD,UACvBH,EAAW0B,KAAI,SAAAC,GAChB,OACE,SAAC,KAAD,CAAoBC,GAAI,GAAGD,EAAKE,GAAhC,UACI,SAAC,IAAD,CAAUlC,YAAagC,EAAKhC,YAAaD,MAAOiC,EAAKjC,SAD9CiC,EAAKE,c,4JChDbC,EAAYvC,EAAAA,EAAAA,KAAH,yFAMTwC,EAAcxC,EAAAA,EAAAA,OAAH,mJAWXyC,EAAYzC,EAAAA,EAAAA,MAAH,2MAUT0C,EAAW1C,EAAAA,EAAAA,GAAH,0T,uIC3Bf2C,EAAU,gCACVC,EAAM,mCAECC,EAAgB,mCAAG,+FACtBC,EAAO,IAAIC,gBAAgB,CAC7BC,QAASJ,EACTK,KAAM,IAHkB,SAKZC,MAAM,GAAD,OAAIP,EAAJ,+BAAkCG,IAL3B,cAKtBK,EALsB,gBAMZA,EAAEC,OANU,cAMtB/B,EANsB,yBAOrBA,GAPqB,2CAAH,qDAUhBF,EAAc,mCAAG,WAAOZ,GAAP,kFACpBuC,EAAO,IAAIC,gBAAgB,CAC7BC,QAASJ,EACTK,KAAM,EACNI,MAAO9C,EACP+C,eAAe,IALO,SAOVJ,MAAM,GAAD,OAAIP,EAAJ,wBAA2BG,IAPtB,cAOpBK,EAPoB,gBAQVA,EAAEC,OARQ,cAQpB/B,EARoB,yBASnBA,GATmB,2CAAH,sDAYdkC,EAAa,mCAAG,WAAOjB,GAAP,kFACnBQ,EAAO,IAAIC,gBAAgB,CAC7BC,QAASJ,IAFY,SAITM,MAAM,GAAD,OAAIP,EAAJ,iBAAoBL,EAApB,YAA0BQ,EAA1B,wCAJI,cAInBK,EAJmB,gBAKTA,EAAEC,OALO,cAKnB/B,EALmB,yBAMlBA,GANkB,2CAAH","sources":["components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.jsx","components/MoviesPage/MoviesPage.jsx","components/MoviesPage/MoviesPage.styled.jsx","utilits/fetchAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Poster = styled.img` \n  height: 85%;\n  width: 100%;\n`\n\nexport const FilmTitle = styled.h2` \ncolor: #333;\nheight: 30px;\nfont-size:20px;\npadding: 10px;\n`\n\nexport const CardFilm = styled.li` \n display: flex;\n flex-direction: column;\n  height: 100%;\nwidth: 100%;\nborder-radius: 5px;\noverflow: hidden;\nbackground-color:#bdb9a6;\n  box-shadow: -2px -2px 7px rgb(109, 109, 109);\ntransition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);\n:hover {\n    transform: scale(1.03);\n  }\n`","import { Poster, FilmTitle, CardFilm } from './FilmCard.styled'\nimport PropTypes from 'prop-types'\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\n\nconst FilmCard = ({ title, poster_path }) => {\n    return (\n      <CardFilm>\n           <Poster src={`${imgBaseUrl}${poster_path}`} />\n        <FilmTitle>{title}</FilmTitle>\n      </CardFilm>\n  )\n}\n\nFilmCard.propTypes = {\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n}\n\nexport default FilmCard","\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { SerchForm, SerchButton, InputWord, BoxFilms } from './MoviesPage.styled';\nimport { findFilmsTitle } from 'utilits/fetchAPI';\nimport { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport FilmCard from 'components/FilmCard/FilmCard';\n\nconst MoviesPage = () => {\n  const [searchWord, SetSearchWord] = useState('')\n  const [arreyFilms, SetArreyFilms] = useState([])\n\n  const onInpurWord = e => {\n    SetSearchWord(e.currentTarget.value.trim());\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    const queryW = searchWord.toLowerCase().trim()\n    if (queryW === '') {return};\n    findFilmsTitle(queryW).then((r)=>{\n      SetArreyFilms(r.results);\n    })\n  };\n\n    // просто проверка API\n  useEffect(() => {\n    if (arreyFilms.length === 0) { return }\n  //   console.log(arreyFilms)\n  }, [arreyFilms])\n\n  return (\n    <>\n      <SerchForm onSubmit={formSubmit}>\n        <SerchButton type=\"submit\">\n          <AiOutlineSearch style={{color: \"rgb(250, 250, 250)\", width: \"100%\", height: \"100%\"}} />\n        </SerchButton>\n        <InputWord\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onInput={onInpurWord}\n          value={searchWord}\n        />\n      </SerchForm>\n\n      {arreyFilms.length > 0 && <BoxFilms>\n        {arreyFilms.map(film => {\n        return (\n          <Link key={film.id} to={''+film.id}>\n              <FilmCard poster_path={film.poster_path} title={film.title} />\n            </Link>\n          );\n        })}\n      </BoxFilms>}\n    </>\n  )\n}\n\nexport default MoviesPage","import styled from \"@emotion/styled\";\n\nexport const SerchForm = styled.form` \ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nexport const SerchButton = styled.button`\nbackground-color: transparent;\nwidth: 20px;\nheight: 20px;\nborder: none;\nopacity: 0.7;\n:hover {\n    opacity: 1;\n  }\n`\n\nexport const InputWord = styled.input`\nheight: 30px;\ndisplay: flex;\nmargin-left: 10px;\npadding: 2px 10px;\nborder-radius: 7px;\nbox-shadow: 1px 1px 10px rgb(220, 187, 228);\ncolor: rgb(123, 59, 207);\nfont: inherit;`\n\nexport const BoxFilms = styled.ul` \n display: grid;\n/* max-width: calc(100vw - 48px); */\ngrid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\ngrid-gap: 16px;\nmargin-top: 30px;\nmargin-bottom: 20px;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;\nmin-height: 100%;\nmax-width: 1400px;\n`\n\n\n","// https://api.themoviedb.org/3/movie/550?api_key=c4ff5df06d9c3bc212d0ff99e5222626\n\nconst baseUrl = \"https://api.themoviedb.org/3/\"\nconst KEY = 'c4ff5df06d9c3bc212d0ff99e5222626'\n\nexport const findPopularFilms = async () => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n    });\n    const f = await fetch(`${baseUrl}trending/movie/week?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsTitle = async (searchWord) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n        query: searchWord,\n        include_adult: false,\n    });\n    const f = await fetch(`${baseUrl}search/movie?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsInfo = async (id) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n    });\n    const f = await fetch(`${baseUrl}movie/${id}?${meta}&append_to_response=credits,reviews`)\n    const r = await f.json()\n    return r\n}"],"names":["Poster","styled","FilmTitle","CardFilm","title","poster_path","src","useState","searchWord","SetSearchWord","arreyFilms","SetArreyFilms","useEffect","length","onSubmit","event","preventDefault","queryW","toLowerCase","trim","findFilmsTitle","then","r","results","type","style","color","width","height","autoComplete","autoFocus","placeholder","onInput","e","currentTarget","value","map","film","to","id","SerchForm","SerchButton","InputWord","BoxFilms","baseUrl","KEY","findPopularFilms","meta","URLSearchParams","api_key","page","fetch","f","json","query","include_adult","findFilmsInfo"],"sourceRoot":""}